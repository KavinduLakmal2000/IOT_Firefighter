#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define KL_BMPWIDTH  128
#define KL_BMPHEIGHT 32

Adafruit_SSD1306 display(-1); //  display SCL - A5, SDA - A4

#define MQ2pin (0) // MQ2 A0
const int PULSE_SENSOR_PIN = 1; // BPM A1

float sensorValue; 
int Signal;              
int Threshold = 550;
const int smokePin = 10; // smoke out
const int aroundTemp = 11; // temp in


const unsigned char bitmap_KL[] PROGMEM = {
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11110000,B01111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111111,B11111110,B00000000,B00011111,B11111111,B11111111,B11111111,B11111111,B11111111,B11000000,B01111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11100011,B11100000,B00000000,B00001111,B11111111,B11110000,B11111111,B11111111,B11111111,B00000000,B00111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B10001110,B00000000,B00000000,B00000111,B11111111,B10000001,B11111111,B11111111,B11111110,B00000000,B01111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B00000000,B00000000,B00000000,B00001111,B11111100,B00000011,B11111111,B11111111,B11111000,B00000000,B01111111,B11111111,B11111111,
  B11111111,B11111111,B11111110,B00000000,B00000000,B00011111,B00001111,B11100000,B00000111,B11111111,B11111111,B11110000,B00000000,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111100,B00000000,B00000001,B11111110,B00011111,B00000000,B10011111,B11111111,B11111111,B11000000,B11000000,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111000,B00000000,B00011111,B11111100,B00111000,B00000011,B11111111,B11111111,B11111111,B10000011,B10000001,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11110000,B00000000,B11111111,B11111000,B01000000,B00011111,B11111111,B11111111,B11111111,B00000111,B00000011,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11110000,B00000111,B11111111,B11110000,B00000000,B11111111,B11111111,B11111111,B11111110,B00001100,B00000111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11110000,B00111111,B11111111,B11100000,B00000111,B11111111,B11111111,B11111111,B11111000,B00011000,B00001111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11110001,B11111111,B11111111,B11000000,B00111111,B11111111,B11111111,B11111111,B11110000,B01110000,B00011111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111111,B11111111,B00000001,B11111111,B11111111,B11111111,B11111111,B11100000,B11100000,B00011111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111111,B11111000,B00001111,B11111111,B11111111,B11111111,B11111111,B11000001,B11100000,B00011111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111111,B11000000,B00111111,B11111111,B11111111,B11111111,B11111111,B10000011,B11000000,B00111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111111,B10000000,B01111111,B11111111,B11111111,B11111111,B11111111,B00001111,B11000000,B11111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111111,B00000000,B01111111,B11111111,B11111111,B11111111,B11111100,B00011111,B11000011,B11111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111111,B00000000,B00011111,B11111111,B11111111,B11111111,B11111000,B00111111,B11111111,B11111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111111,B10000000,B00000111,B11111111,B11111111,B11111111,B11110000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111111,B00000000,B00000000,B11111111,B11111111,B11111111,B11100001,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111110,B00001000,B00000000,B00011111,B11111111,B11111111,B11000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111100,B00011110,B00000000,B00000111,B11111111,B11111111,B10000111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111000,B00111111,B11000000,B00000000,B11111111,B11111110,B00000001,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11110000,B01111111,B11110000,B00000000,B00111110,B00000000,B00000000,B00000001,B11111111,B11111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11100000,B11111111,B11111110,B00000000,B00001100,B00000000,B00000000,B00000000,B00001111,B11111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11000001,B11111111,B11111111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B10000011,B11111111,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B00000111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111110,B00001111,B11111111,B11111111,B11111111,B10000000,B11111111,B11111111,B00000000,B00000000,B11111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11100000,B11111111,B11111111,B11111111,B10000111,B11111111,B11111111,B11111111,B11111111,
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111101,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
};



void setup() {
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  

  pinMode(smokePin,OUTPUT);
  pinMode(aroundTemp,INPUT);

  display.clearDisplay();
  delay(500);


  display.drawBitmap(0, 0, bitmap_KL, 128, 32, WHITE);
  display.display();
  delay(1000);
  display.clearDisplay();
  
  display.setTextColor(WHITE); 
  display.setTextSize(1);
  display.setCursor(14, 13);
  display.print("System Loading...");
  display.setCursor(40, 1);
  display.print("Phoenix");
  display.display();  
 
 for (int k=1; k<=122; k++){
    if(k%3==2){
  
  display.display();
  display.setTextColor(WHITE); 
  display.setTextSize(1);
  display.setCursor(k, 25);
  display.print("D");
  display.display();
 }
 }
  display.clearDisplay();



}

void loop() {
 display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(12,0);
  display.println("Phoenix");
  display.setCursor(60,0);
  display.println("DashBoard");
  display.display();
 
//////////////////////////////////////////////////////Read smoke/////////////////////////////////
  sensorValue = analogRead(MQ2pin); 

   if(sensorValue > 300)
  {
    digitalWrite(smokePin,HIGH);
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 8);
  display.println("Smoke - detected!");
  display.display();

  }
  else{
    digitalWrite(smokePin,LOW);
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0,8);
  display.println("Smoke - Normal");
  display.display();

  }
/////////////////////////////////////////////////////////Read BPM/////////////////////////////////////////////
  Signal = analogRead(PULSE_SENSOR_PIN);
  Serial.write(Signal);
  
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0,16);
  display.println("BPM -");
  display.setCursor(38,16);
  display.println(Signal);
  display.display();
////////////////////////////////////////////////////get DHT temp Signal///////////////////////////////////////
  if (digitalRead(aroundTemp)==HIGH){
  digitalWrite(smokePin,LOW);
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0,24);
  display.println("Temp over 50");
  display.display();

  }
  else{
  digitalWrite(smokePin,LOW);
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0,24);
  display.println("Temp under 50");
  display.display();

  }
  
 delay(2000);
   display.clearDisplay();
}
